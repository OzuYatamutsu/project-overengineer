name: Build and push images
on:
  push:
    branches:
      - main
      - feature/secrify-passwords

jobs:
  generate-vault-cert:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Build certificate
        run: vault/generate-vault-cert.sh

      - name: Upload vault cert and key
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            vault.crt
            vault.key

  ollama-ocr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Generate vault certificates
        run: |
          /bin/bash vault/generate-vault-cert.sh

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./ollama
          file: ./ollama/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/ollama-ocr:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/ollama-ocr:v1

  project-overengineer-fe:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: project-overengineer-fe/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/project-overengineer-fe:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/project-overengineer-fe:v1

  janitor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: janitor/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/janitor:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/janitor:v1
  
  ocr-worker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ocr-worker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/ocr-worker:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/ocr-worker:v1

  redis-master:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./redis
          file: ./redis/Dockerfile-master
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/redis-master:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/redis-master:v1

  redis-replica:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./redis
          file: ./redis/Dockerfile-replica
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/redis-replica:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/redis-replica:v1

  redis-sentinel:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./redis
          file: ./redis/Dockerfile-sentinel
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/redis-sentinel:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/redis-sentinel:v1

  status-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: status-api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/status-api:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/status-api:v1

  vault:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: generate-vault-cert

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull vault cert and key
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./vault/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/vault:latest
            ghcr.io/${{ env.OWNER_LC }}/project-overengineer/vault:v1
