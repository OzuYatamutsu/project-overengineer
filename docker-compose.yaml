services:
  ollama:  # TODO: to be sidecar on ocr-core
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ollama-ocr
    restart: unless-stopped
    ports:
      - "11434:11434"
    shm_size: "1g"

  frontend:
    build:
      context: ./project-overengineer-fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      TRANSFORMER_PORT: ${TRANSFORMER_PORT}
      SENTINEL_HOST: ${SENTINEL_HOST}
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      STATUS_API_URL: ${STATUS_API_URL}
    depends_on:
      - backend

  backend:
    build:
      context: ./status-api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      STATUS_API_PORT: ${STATUS_API_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis

  ocr-core:
    build:
      context: ./ocr-worker
      dockerfile: Dockerfile
    environment:
      SENTINEL_HOST: ${SENTINEL_HOST}
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      replicas: 2
    depends_on:
      - redis

  janitor:
    build:
      context: ./janitor
      dockerfile: Dockerfile
    environment:
      SENTINEL_HOST: ${SENTINEL_HOST}
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile-master
    ports:
      - "6379:6379"
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

  redis-replica:
    build:
      context: ./redis
      dockerfile: Dockerfile-replica
    environment:
      REDIS_REPLICA_PORT: ${REDIS_REPLICA_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      replicas: 2
    depends_on:
      - redis

  redis-sentinel:
    build:
      context: ./redis
      dockerfile: Dockerfile-sentinel
    ports:
      - "26379:26379"
    environment:
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis

  redis-sentinel-replica:
    build:
      context: ./redis
      dockerfile: Dockerfile-sentinel
    environment:
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      replicas: 2
    depends_on:
      - redis
      - redis-replica
