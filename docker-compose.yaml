services:
  ollama-ocr:
   build:
     context: ./ollama
     dockerfile: Dockerfile
   container_name: ollama-ocr
   restart: unless-stopped
   ports:
     - "11434:11434"
   shm_size: "1g"

  project-overengineer-fe:
    build:
      context: .
      dockerfile: ./project-overengineer-fe/Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      TRANSFORMER_PORT: ${TRANSFORMER_PORT:-3000}
      SENTINEL_HOST: ${SENTINEL_HOST}
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      STATUS_API_URL: ${STATUS_API_URL}
    depends_on:
      - status-api
      - vault

  status-api:
    build:
      context: .
      dockerfile: status-api/Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      STATUS_API_PORT: ${STATUS_API_PORT:-3001}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis
      - vault

  ocr-worker:
    build:
      context: .
      dockerfile: ./ocr-worker/Dockerfile
    ports:
      - "3002:3002"
    environment:
      SENTINEL_HOST: ${SENTINEL_HOST}
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      replicas: 2
    depends_on:
      - redis
      - vault

  janitor:
    build:
      context: .
      dockerfile: janitor/Dockerfile
    ports:
      - "3000:3000"  # for /healthz endpoint
    environment:
      SENTINEL_HOST: ${SENTINEL_HOST}
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis
      - vault

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile-master
    ports:
      - "6379:6379"
    environment:
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - vault

  redis-replica:
    build:
      context: ./redis
      dockerfile: Dockerfile-replica
    environment:
      REDIS_REPLICA_PORT: ${REDIS_REPLICA_PORT:-6379}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      replicas: 2
    depends_on:
      - redis
      - vault

  redis-sentinel:
    build:
      context: ./redis
      dockerfile: Dockerfile-sentinel
    ports:
      - "26379:26379"
    environment:
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis
      - vault

  redis-sentinel-replica:
    build:
      context: ./redis
      dockerfile: Dockerfile-sentinel
    environment:
      SENTINEL_PORT: ${SENTINEL_PORT}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      replicas: 2
    depends_on:
      - redis
      - redis-replica
      - vault

  vault:
    build:
      context: .
      dockerfile: vault/Dockerfile
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
