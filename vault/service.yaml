apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  labels:
    app: vault
data:
  vault.hcl: |
    ui = true
    cluster_name = "vault"

    listener "tcp" {
      address     = "0.0.0.0:8200"
      cluster_address = "0.0.0.0:8201"
      tls_disable = 1
    }

    storage "raft" {
      path    = "/vault/data"
      node_id = "$(HOSTNAME)"
    }

    api_addr     = "http://$(HOSTNAME).vault-internal:8200"
    cluster_addr = "http://$(HOSTNAME).vault-internal:8201"
    disable_mlock = true

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
spec:
  serviceName: vault-ha
  replicas: 3
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      serviceAccountName: default
      containers:
        - name: vault
          image: hashicorp/vault:1.18
          args:
            - "server"
            - "-config=/vault/config/vault.hcl"
          ports:
            - name: http
              containerPort: 8200
            - name: internal
              containerPort: 8201
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: data
              mountPath: /vault/data
          readinessProbe:
            httpGet:
              path: /v1/sys/health
              port: 8200
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: config
          configMap:
            name: vault-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: svc-vault
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8200
    - name: internal
      port: 8201
  selector:
    app: vault

---

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
spec:
  provider:
    vault:
      server: "https://svc-vault:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: kubernetes
          role: external-secrets

---

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: redis-password
    creationPolicy: Owner
  data:
    - secretKey: REDIS_PASSWORD
      remoteRef:
        key: redis
        property: REDIS_PASSWORD

---

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: redis-password
    creationPolicy: Owner
  data:
    - secretKey: REDIS_PASSWORD
      remoteRef:
        key: redis
        property: REDIS_PASSWORD

# TODO: automate init, unseal
