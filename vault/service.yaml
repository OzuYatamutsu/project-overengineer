apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  labels:
    app: vault
data:
  vault.hcl: |
    ui = true
    cluster_name = "vault"

    listener "tcp" {
      address     = "0.0.0.0:8200"
      cluster_address = "0.0.0.0:8201"
    }

    storage "raft" {
      path    = "/vault/data"
      node_id = "$(HOSTNAME)"
    }

    api_addr     = "http://$(HOSTNAME).svc-vault.default.svc.cluster.local:8200"
    cluster_addr = "http://$(HOSTNAME).svc-vault.default.svc.cluster.local:8201"
    disable_mlock = true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
data:
  config.hcl: |
    exit_after_auth = false
    pid_file = "/tmp/vault.pid"

    vault {
      address = "https://svc-vault.default.svc.cluster.local:8200"
    }

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "svc-auth"
        }
      }

      sink "file" {
        config = {
          path = "/vault/secrets/.token"
        }
      }
    }

    template {
      source      = "/vault/config/config.ctmpl"
      destination = "/vault/secrets/config.txt"
    }
  config.ctmpl: |
    {{- with secret "secret/data/myapp/config" -}}
    {{ .Data.data.config }}
    {{- end }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
spec:
  serviceName: svc-vault
  replicas: 3
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: vault
                topologyKey: "kubernetes.io/hostname"
      serviceAccountName: default
      containers:
        - name: vault
          image: hashicorp/vault:1.18
          args:
            - "server"
            - "-config=/vault/config/vault.hcl"
          ports:
            - name: http
              containerPort: 8200
            - name: internal
              containerPort: 8201
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: data
              mountPath: /vault/data
          readinessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true
              port: 8200
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true
              port: 8200
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
          securityContext:
            readOnlyRootFilesystem: true
      securityContext:
        runAsUser: 100
        runAsGroup: 100
        fsGroup: 100
        runAsNonRoot: true
      volumes:
        - name: config
          configMap:
            name: vault-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 512Mi

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: svc-auth

---

apiVersion: v1
kind: Service
metadata:
  name: svc-vault
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8200
    - name: internal
      port: 8201
  selector:
    app: vault
